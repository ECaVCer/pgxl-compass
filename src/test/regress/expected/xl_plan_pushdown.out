--ensure that the plans are being pushed to the right subset of nodes
--Sometimes plans get pushed down to more nodes than they really need to.
CREATE TABLE xl_pp (a bigint, b int) DISTRIBUTE BY HASH(a);
INSERT INTO xl_pp SELECT generate_series(1,100), 20;
EXPLAIN VERBOSE SELECT * FROM xl_pp WHERE a = 100;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Data Node Scan on "__REMOTE_FQS_QUERY__"  (cost=0.00..0.00 rows=0 width=0)
   Output: xl_pp.a, xl_pp.b
   Node/s: datanode_2
   Remote query: SELECT a, b FROM xl_pp WHERE (a = 100)
(4 rows)

EXPLAIN VERBOSE SELECT * FROM xl_pp WHERE a = 100::bigint;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Data Node Scan on "__REMOTE_FQS_QUERY__"  (cost=0.00..0.00 rows=0 width=0)
   Output: xl_pp.a, xl_pp.b
   Node/s: datanode_2
   Remote query: SELECT a, b FROM xl_pp WHERE (a = (100)::bigint)
(4 rows)

EXPLAIN VERBOSE INSERT INTO xl_pp (a, b) VALUES (200, 1) ;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Data Node Scan on "__REMOTE_FQS_QUERY__"  (cost=0.00..0.00 rows=0 width=0)
   Output: 200, 1
   Node expr: 200
   Remote query: INSERT INTO xl_pp (a, b) VALUES (200, 1)
(4 rows)

EXPLAIN VERBOSE INSERT INTO xl_pp (a, b) VALUES (201::bigint, 1) ;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Data Node Scan on "__REMOTE_FQS_QUERY__"  (cost=0.00..0.00 rows=0 width=0)
   Output: (201)::bigint, 1
   Node expr: (201)::bigint
   Remote query: INSERT INTO xl_pp (a, b) VALUES ((201)::bigint, 1)
(4 rows)

EXPLAIN VERBOSE UPDATE xl_pp SET b=2 where a=200;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Data Node Scan on "__REMOTE_FQS_QUERY__"  (cost=0.00..0.00 rows=0 width=0)
   Output: 2, xl_pp.a, xl_pp.xc_node_id, xl_pp.ctid
   Node/s: datanode_1
   Remote query: UPDATE xl_pp SET b = 2 WHERE (a = 200)
(4 rows)

EXPLAIN VERBOSE UPDATE xl_pp SET b=2 where a=200::bigint;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Data Node Scan on "__REMOTE_FQS_QUERY__"  (cost=0.00..0.00 rows=0 width=0)
   Output: 2, xl_pp.a, xl_pp.xc_node_id, xl_pp.ctid
   Node/s: datanode_1
   Remote query: UPDATE xl_pp SET b = 2 WHERE (a = (200)::bigint)
(4 rows)

EXPLAIN VERBOSE DELETE FROM xl_pp where a=200;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Data Node Scan on "__REMOTE_FQS_QUERY__"  (cost=0.00..0.00 rows=0 width=0)
   Output: xl_pp.a, xl_pp.xc_node_id, xl_pp.ctid
   Node/s: datanode_1
   Remote query: DELETE FROM xl_pp WHERE (a = 200)
(4 rows)

SELECT * from xl_pp where a=200;
 a | b 
---+---
(0 rows)

SELECT * from xl_pp where a=200::bigint;
 a | b 
---+---
(0 rows)

EXPLAIN VERBOSE DELETE FROM xl_pp where a=200;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Data Node Scan on "__REMOTE_FQS_QUERY__"  (cost=0.00..0.00 rows=0 width=0)
   Output: xl_pp.a, xl_pp.xc_node_id, xl_pp.ctid
   Node/s: datanode_1
   Remote query: DELETE FROM xl_pp WHERE (a = 200)
(4 rows)

EXPLAIN VERBOSE DELETE FROM xl_pp where a=200::bigint;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Data Node Scan on "__REMOTE_FQS_QUERY__"  (cost=0.00..0.00 rows=0 width=0)
   Output: xl_pp.a, xl_pp.xc_node_id, xl_pp.ctid
   Node/s: datanode_1
   Remote query: DELETE FROM xl_pp WHERE (a = (200)::bigint)
(4 rows)

--Testing with MODULO distribution
CREATE TABLE xl_ppm (a INT2, b int) DISTRIBUTE BY MODULO(a);
INSERT INTO xl_ppm SELECT generate_series(1,100), 20;
EXPLAIN VERBOSE SELECT * FROM xl_ppm WHERE a = 100;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Data Node Scan on "__REMOTE_FQS_QUERY__"  (cost=0.00..0.00 rows=0 width=0)
   Output: xl_ppm.a, xl_ppm.b
   Node/s: datanode_1
   Remote query: SELECT a, b FROM xl_ppm WHERE (a = 100)
(4 rows)

EXPLAIN VERBOSE SELECT * FROM xl_ppm WHERE a = 100::INT2;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Data Node Scan on "__REMOTE_FQS_QUERY__"  (cost=0.00..0.00 rows=0 width=0)
   Output: xl_ppm.a, xl_ppm.b
   Node/s: datanode_1
   Remote query: SELECT a, b FROM xl_ppm WHERE (a = (100)::smallint)
(4 rows)

EXPLAIN VERBOSE INSERT INTO xl_ppm (a, b) VALUES (201::INT2, 1) ;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Data Node Scan on "__REMOTE_FQS_QUERY__"  (cost=0.00..0.00 rows=0 width=0)
   Output: (201)::smallint, 1
   Node expr: (201)::smallint
   Remote query: INSERT INTO xl_ppm (a, b) VALUES ((201)::smallint, 1)
(4 rows)

EXPLAIN VERBOSE UPDATE xl_ppm SET b=2 where a=200;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Data Node Scan on "__REMOTE_FQS_QUERY__"  (cost=0.00..0.00 rows=0 width=0)
   Output: 2, xl_ppm.a, xl_ppm.xc_node_id, xl_ppm.ctid
   Node/s: datanode_1
   Remote query: UPDATE xl_ppm SET b = 2 WHERE (a = 200)
(4 rows)

EXPLAIN VERBOSE UPDATE xl_ppm SET b=2 where a=200::INT2;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Data Node Scan on "__REMOTE_FQS_QUERY__"  (cost=0.00..0.00 rows=0 width=0)
   Output: 2, xl_ppm.a, xl_ppm.xc_node_id, xl_ppm.ctid
   Node/s: datanode_1
   Remote query: UPDATE xl_ppm SET b = 2 WHERE (a = (200)::smallint)
(4 rows)

EXPLAIN VERBOSE DELETE FROM xl_ppm where a=200;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Data Node Scan on "__REMOTE_FQS_QUERY__"  (cost=0.00..0.00 rows=0 width=0)
   Output: xl_ppm.a, xl_ppm.xc_node_id, xl_ppm.ctid
   Node/s: datanode_1
   Remote query: DELETE FROM xl_ppm WHERE (a = 200)
(4 rows)

SELECT * from xl_ppm where a=200;
 a | b 
---+---
(0 rows)

SELECT * from xl_ppm where a=200::INT2;
 a | b 
---+---
(0 rows)

EXPLAIN VERBOSE DELETE FROM xl_ppm where a=200;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Data Node Scan on "__REMOTE_FQS_QUERY__"  (cost=0.00..0.00 rows=0 width=0)
   Output: xl_ppm.a, xl_ppm.xc_node_id, xl_ppm.ctid
   Node/s: datanode_1
   Remote query: DELETE FROM xl_ppm WHERE (a = 200)
(4 rows)

EXPLAIN VERBOSE DELETE FROM xl_ppm where a=200::INT2;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Data Node Scan on "__REMOTE_FQS_QUERY__"  (cost=0.00..0.00 rows=0 width=0)
   Output: xl_ppm.a, xl_ppm.xc_node_id, xl_ppm.ctid
   Node/s: datanode_1
   Remote query: DELETE FROM xl_ppm WHERE (a = (200)::smallint)
(4 rows)

DROP TABLE xl_pp;
DROP TABLE xl_ppm;
