--ensure that the plans are being pushed to the right subset of nodes
--Sometimes plans get pushed down to more nodes than they really need to.
CREATE TABLE xl_pp (a bigint, b int) DISTRIBUTE BY HASH(a);
INSERT INTO xl_pp SELECT generate_series(1,100), 20;
EXPLAIN VERBOSE SELECT * FROM xl_pp WHERE a = 100;
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_2)  (cost=0.00..35.50 rows=10 width=12)
   Output: a, b
   ->  Seq Scan on public.xl_pp  (cost=0.00..35.50 rows=10 width=12)
         Output: a, b
         Filter: (xl_pp.a = 100)
(5 rows)

--This goes to all nodes (incorrect behavior)
EXPLAIN VERBOSE SELECT * FROM xl_pp WHERE a = 100::bigint;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_2)  (cost=0.00..35.50 rows=10 width=12)
   Output: a, b
   ->  Seq Scan on public.xl_pp  (cost=0.00..35.50 rows=10 width=12)
         Output: a, b
         Filter: (xl_pp.a = '100'::bigint)
(5 rows)

--goes to just one node where 100 is mapped to
--Looks like we test for datatypes for distribution column and constant literals and want them to be of the same type for pushdown to work
--Doesn't look like a necessary restriction.
--100 by default gets typecast-ed to INT
-- Same behavior for SELECT, DELETE and UPDATE right now - (bug) - hence test is failing. 
EXPLAIN VERBOSE INSERT INTO xl_pp (a, b) VALUES (200, 1) ;
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_1)  (cost=0.00..0.01 rows=1 width=0)
   ->  Insert on public.xl_pp  (cost=0.00..0.01 rows=1 width=0)
         ->  Remote Subquery Scan on local node  (cost=0.00..0.01 rows=1 width=0)
               Output: '200'::bigint, 1
               Distribute results by H: '200'::bigint
               ->  Result  (cost=0.00..0.01 rows=1 width=0)
                     Output: '200'::bigint, 1
(7 rows)

EXPLAIN VERBOSE INSERT INTO xl_pp (a, b) VALUES (201::bigint, 1) ;
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_1)  (cost=0.00..0.01 rows=1 width=0)
   ->  Insert on public.xl_pp  (cost=0.00..0.01 rows=1 width=0)
         ->  Remote Subquery Scan on local node  (cost=0.00..0.01 rows=1 width=0)
               Output: '201'::bigint, 1
               Distribute results by H: '201'::bigint
               ->  Result  (cost=0.00..0.01 rows=1 width=0)
                     Output: '201'::bigint, 1
(7 rows)

EXPLAIN VERBOSE UPDATE xl_pp SET b=2 where a=200;
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_1)  (cost=0.00..35.50 rows=10 width=18)
   ->  Update on public.xl_pp  (cost=0.00..35.50 rows=10 width=18)
         ->  Seq Scan on public.xl_pp  (cost=0.00..35.50 rows=10 width=18)
               Output: a, 2, a, xc_node_id, ctid
               Filter: (xl_pp.a = 200)
(5 rows)

EXPLAIN VERBOSE UPDATE xl_pp SET b=2 where a=200::bigint;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_1)  (cost=0.00..35.50 rows=10 width=18)
   ->  Update on public.xl_pp  (cost=0.00..35.50 rows=10 width=18)
         ->  Seq Scan on public.xl_pp  (cost=0.00..35.50 rows=10 width=18)
               Output: a, 2, a, xc_node_id, ctid
               Filter: (xl_pp.a = '200'::bigint)
(5 rows)

EXPLAIN VERBOSE DELETE FROM xl_pp where a=200;
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_1)  (cost=0.00..35.50 rows=10 width=18)
   ->  Delete on public.xl_pp  (cost=0.00..35.50 rows=10 width=18)
         ->  Seq Scan on public.xl_pp  (cost=0.00..35.50 rows=10 width=18)
               Output: a, xc_node_id, ctid, a
               Filter: (xl_pp.a = 200)
(5 rows)

SELECT * from xl_pp where a=200;
 a | b 
---+---
(0 rows)

SELECT * from xl_pp where a=200::bigint;
 a | b 
---+---
(0 rows)

EXPLAIN VERBOSE DELETE FROM xl_pp where a=200;
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_1)  (cost=0.00..35.50 rows=10 width=18)
   ->  Delete on public.xl_pp  (cost=0.00..35.50 rows=10 width=18)
         ->  Seq Scan on public.xl_pp  (cost=0.00..35.50 rows=10 width=18)
               Output: a, xc_node_id, ctid, a
               Filter: (xl_pp.a = 200)
(5 rows)

EXPLAIN VERBOSE DELETE FROM xl_pp where a=200::bigint;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_1)  (cost=0.00..35.50 rows=10 width=18)
   ->  Delete on public.xl_pp  (cost=0.00..35.50 rows=10 width=18)
         ->  Seq Scan on public.xl_pp  (cost=0.00..35.50 rows=10 width=18)
               Output: a, xc_node_id, ctid, a
               Filter: (xl_pp.a = '200'::bigint)
(5 rows)

--Testing with MODULO distribution
CREATE TABLE xl_ppm (a INT2, b int) DISTRIBUTE BY MODULO(a);
INSERT INTO xl_ppm SELECT generate_series(1,100), 20;
EXPLAIN VERBOSE SELECT * FROM xl_ppm WHERE a = 100;
                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_1)  (cost=0.00..40.00 rows=12 width=6)
   Output: a, b
   ->  Seq Scan on public.xl_ppm  (cost=0.00..40.00 rows=12 width=6)
         Output: a, b
         Filter: (xl_ppm.a = 100)
(5 rows)

--This goes to all nodes (incorrect behavior)
EXPLAIN VERBOSE SELECT * FROM xl_ppm WHERE a = 100::INT2;
                                 QUERY PLAN                                  
-----------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_1)  (cost=0.00..40.00 rows=12 width=6)
   Output: a, b
   ->  Seq Scan on public.xl_ppm  (cost=0.00..40.00 rows=12 width=6)
         Output: a, b
         Filter: (xl_ppm.a = '100'::smallint)
(5 rows)

--goes to just one node where 100 is mapped to
--Looks like we test for datatypes for distribution column and constant literals and want them to be of the same type for pushdown to work
--Doesn't look like a necessary restriction.
--100 by default gets typecast-ed to INT
-- Same behavior for SELECT, DELETE and UPDATE right now - (bug) - hence test is failing. 
EXPLAIN VERBOSE INSERT INTO xl_ppm (a, b) VALUES (200, 1) ;
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_1)  (cost=0.00..0.01 rows=1 width=0)
   ->  Insert on public.xl_ppm  (cost=0.00..0.01 rows=1 width=0)
         ->  Remote Subquery Scan on local node  (cost=0.00..0.01 rows=1 width=0)
               Output: '200'::smallint, 1
               Distribute results by M: '200'::smallint
               ->  Result  (cost=0.00..0.01 rows=1 width=0)
                     Output: '200'::smallint, 1
(7 rows)

EXPLAIN VERBOSE INSERT INTO xl_ppm (a, b) VALUES (201::INT2, 1) ;
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_2)  (cost=0.00..0.01 rows=1 width=0)
   ->  Insert on public.xl_ppm  (cost=0.00..0.01 rows=1 width=0)
         ->  Remote Subquery Scan on local node  (cost=0.00..0.01 rows=1 width=0)
               Output: '201'::smallint, 1
               Distribute results by M: '201'::smallint
               ->  Result  (cost=0.00..0.01 rows=1 width=0)
                     Output: '201'::smallint, 1
(7 rows)

EXPLAIN VERBOSE UPDATE xl_ppm SET b=2 where a=200;
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_1)  (cost=0.00..40.00 rows=12 width=12)
   ->  Update on public.xl_ppm  (cost=0.00..40.00 rows=12 width=12)
         ->  Seq Scan on public.xl_ppm  (cost=0.00..40.00 rows=12 width=12)
               Output: a, 2, a, xc_node_id, ctid
               Filter: (xl_ppm.a = 200)
(5 rows)

EXPLAIN VERBOSE UPDATE xl_ppm SET b=2 where a=200::INT2;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_1)  (cost=0.00..40.00 rows=12 width=12)
   ->  Update on public.xl_ppm  (cost=0.00..40.00 rows=12 width=12)
         ->  Seq Scan on public.xl_ppm  (cost=0.00..40.00 rows=12 width=12)
               Output: a, 2, a, xc_node_id, ctid
               Filter: (xl_ppm.a = '200'::smallint)
(5 rows)

EXPLAIN VERBOSE DELETE FROM xl_ppm where a=200;
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_1)  (cost=0.00..40.00 rows=12 width=12)
   ->  Delete on public.xl_ppm  (cost=0.00..40.00 rows=12 width=12)
         ->  Seq Scan on public.xl_ppm  (cost=0.00..40.00 rows=12 width=12)
               Output: a, xc_node_id, ctid, a
               Filter: (xl_ppm.a = 200)
(5 rows)

SELECT * from xl_ppm where a=200;
 a | b 
---+---
(0 rows)

SELECT * from xl_ppm where a=200::INT2;
 a | b 
---+---
(0 rows)

EXPLAIN VERBOSE DELETE FROM xl_ppm where a=200;
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_1)  (cost=0.00..40.00 rows=12 width=12)
   ->  Delete on public.xl_ppm  (cost=0.00..40.00 rows=12 width=12)
         ->  Seq Scan on public.xl_ppm  (cost=0.00..40.00 rows=12 width=12)
               Output: a, xc_node_id, ctid, a
               Filter: (xl_ppm.a = 200)
(5 rows)

EXPLAIN VERBOSE DELETE FROM xl_ppm where a=200::INT2;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_1)  (cost=0.00..40.00 rows=12 width=12)
   ->  Delete on public.xl_ppm  (cost=0.00..40.00 rows=12 width=12)
         ->  Seq Scan on public.xl_ppm  (cost=0.00..40.00 rows=12 width=12)
               Output: a, xc_node_id, ctid, a
               Filter: (xl_ppm.a = '200'::smallint)
(5 rows)

DROP TABLE xl_pp;
DROP TABLE xl_ppm;
